#:schema https://json.schemastore.org/pyproject.json
[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = { find = { where = ["src"] } }

[project]
name = "humantime"
authors = []
description = '"Close enough" time that makes sense when reading it.'
readme = "README.md"
requires-python = ">=3.7"
dynamic = ["version"]
dependencies = [
]

[project.optional-dependencies]
dev = [
  "ruff",
  "pytest",
  "build",
]


[tool.setuptools_scm]
local_scheme = "no-local-version"
fallback_version = "0.0.1"

[tool.coverage.run]
source = ["src/"]
branch = true
relative_files = true
disable_warnings = ["already-imported"]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
  "# pragma: no cover",
  "if (False|0|TYPE_CHECKING):",
  "if __name__ == ['\"]__main__['\"]:",
]

[tool.ruff]
src = ["src", "tests"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.flake8-pytest-style]
mark-parentheses = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "ANN101", # Missing type annotation for `self` in method
  "ANN102", # Missing type annotation for `cls` in classmethod
  "D100",   # Missing docstring in public module
  "D104",   # Missing docstring in public package
  "D105",   # Missing docstring in magic method
  "D107",   # Missing docstring in `__init__`
  "PD",     # pandas-vet linter
  "TD002",  # Missing author in TODO
  "TD003",  # Missing issue link on the line following this TODO
  "FBT003", # Boolean positional value in function call
]
unfixable = [
  "ERA001", # Found commented-out code
  "F401",   # Unused import
  "F841",   # Local variable is assigned to but never used
  "UP036",  # Version block is outdated for minimum python version (if sys.version < ...)
]

[tool.ruff.lint.per-file-ignores]
"tests*/**/*" = [
  "ANN001", # Missing type annotation for function argument `service`
  "INP001", # `file` is part of an implicit namespace package. Add an `__init__.py`
  "PT004",  # Fixture `worker` does not return anything, add leading underscore
  "D103",   # Missing docstring in public function
  "ANN201", # Missing return type annotation for public function
  "SIM108", # Use ternary operator
]
"tests*/**/test_*" = [
  "PLR2004", # Magic value used in comparison, consider replacing with a constant variable
  "S101",    # Use of assert detected
]
